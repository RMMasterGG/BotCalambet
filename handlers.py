from aiogram.filters import CommandStart
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import Message, CallbackQuery
from aiogram import F, Router
from aiogram.fsm.context import FSMContext
import keyboard as kb
import chatgpt as gpt

router = Router()

class request_code(StatesGroup):
    request = State()

@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer(
        "ü§ñ–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, —è –±–æ—Ç - –ø–æ–º–æ—â–Ω–∏–∫ RKSI, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–º –∏–ª–∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ–º –∫–æ–¥–∞, –∞ —Ç–∞–∫–∂–µ —è —É–º–µ—é –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫–∏ü§ñ",
        reply_markup=kb.main
    )

@router.message(F.text == '–ß—Ç–æ —è —É–º–µ—é? üìã')
async def get_info(message: Message):
	await message.answer(" ü§ñ–ß—Ç–æ —É–º–µ–µ—Ç –¥–∞–Ω–Ω—ã–π –±–æ—Ç?ü§ñ \n1.–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞üíª \n2.–û–±—ä—è—Å–Ω–µ–Ω–∏–µ –∫–æ–¥–∞üß† \n3.–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–∞–π—Ç —Ç–≤–æ–µ–≥–æ –∫–æ–ª–ª–µ–¥–∂–∞‚ò†",
                         reply_markup=kb.get_info)

@router.message(F.text == '–°–∞–π—Ç ‚ò†')
async def website(message: Message):
    await message.answer("–°—Å—ã–ª–∫–∞: [https://rksi.ru/](https://rksi.ru/)",
                         parse_mode="Markdown",
                         reply_markup=kb.website)

@router.message(F.text == '–ö–æ–¥ üß†')
async def code(message: Message, state: FSMContext):
    await message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –∫–æ–¥–∞ü¶æ "
                        "–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏ –∏–∑ —ç—Ç–æ–≥–æ —Ä–µ–∂–∏–º–∞ - –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É",
                        reply_markup=kb.cancel)
    await state.set_state(request_code.request)

@router.message(request_code.request)
async def code_answer(message: Message, state: FSMContext):
    await message.reply(gpt.answer_code(message.text),
                        reply_markup=kb.cancel)
    await state.clear()
    await state.set_state(request_code.request)
    await message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –µ—â—ë –∑–∞–ø—Ä–æ—Å—ã:")

@router.callback_query(F.data == "cancel")
async def callback_cancel(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    await callback.message.answer("–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞!")
    await callback.answer()

@router.callback_query(F.data == "website")
async def callback_website(callback: CallbackQuery):
    await callback.message.answer("–°—Å—ã–ª–∫–∞: [https://rksi.ru/](https://rksi.ru/)",
                         parse_mode="Markdown",
                         reply_markup=kb.website)
    await callback.answer()

@router.callback_query(F.data == "code")
async def callback_code(callback: CallbackQuery, state: FSMContext):
    await callback.message.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –∫–æ–¥–∞ü¶æ "
                        "–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏ –∏–∑ —ç—Ç–æ–≥–æ —Ä–µ–∂–∏–º–∞ - –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É",
                        reply_markup=kb.cancel)
    await state.set_state(request_code.request)
    await callback.answer()
